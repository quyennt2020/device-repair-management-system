version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: drms-postgres
    environment:
      POSTGRES_DB: device_repair_db
      POSTGRES_USER: drms_user
      POSTGRES_PASSWORD: drms_password
      POSTGRES_HOST_AUTH_METHOD: md5
      POSTGRES_INITDB_ARGS: "--auth-host=md5 --auth=md5"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./shared/database/init:/docker-entrypoint-initdb.d
    networks:
      - drms-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: drms-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - drms-network

  # Elasticsearch
  elasticsearch:
    image: elasticsearch:8.8.0
    container_name: drms-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - drms-network

  # MinIO (S3-compatible object storage)
  minio:
    image: minio/minio:latest
    container_name: drms-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - drms-network

  # Customer Service
  customer-service:
    build:
      context: .
      dockerfile: services/customer-service/Dockerfile
    container_name: drms-customer-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - PORT=3004
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=device_repair_db
      - DB_USER=drms_user
      - DB_PASSWORD=drms_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-jwt-secret-key
    depends_on:
      - postgres
      - redis
    networks:
      - drms-network
    volumes:
      - ./services/customer-service:/app
      - /app/node_modules

  # API Gateway (serves web app and proxies to services)
  api-gateway:
    build:
      context: .
      dockerfile: services/api-gateway/Dockerfile
    container_name: drms-api-gateway
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - FRONTEND_URL=http://localhost:3000
      - DATABASE_URL=postgresql://drms_user:drms_password@postgres:5432/device_repair_db
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
      - CUSTOMER_SERVICE_URL=http://customer-service:3004
    depends_on:
      - postgres
      - redis
      - elasticsearch
      - minio
      - customer-service
    networks:
      - drms-network
    volumes:
      - ./services/api-gateway:/app
      - ./web-app/build:/app/web-app/build
      - /app/node_modules

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:
  minio_data:

networks:
  drms-network:
    driver: bridge