{
  "name": "device-repair-management-system",
  "version": "1.0.0",
  "description": "Comprehensive device repair management system with workflow engine",
  "scripts": {
    "dev": "concurrently \"npm run dev:services\" \"npm run dev:web\"",
    "dev:services": "concurrently \"npm run dev:auth\" \"npm run dev:workflow\" \"npm run dev:case\" \"npm run dev:document\"",
    "dev:web": "cd web-app && npm run dev",
    "dev:auth": "cd services/auth-service && npm run dev",
    "dev:workflow": "cd services/workflow-service && npm run dev",
    "dev:case": "cd services/case-service && npm run dev",
    "dev:document": "cd services/document-service && npm run dev",
    "build": "npm run build:services && npm run build:web",
    "build:services": "concurrently \"npm run build:auth\" \"npm run build:workflow\" \"npm run build:case\" \"npm run build:document\"",
    "build:web": "cd web-app && npm run build",
    "build:auth": "cd services/auth-service && npm run build",
    "build:workflow": "cd services/workflow-service && npm run build",
    "build:case": "cd services/case-service && npm run build",
    "build:document": "cd services/document-service && npm run build",
    "test": "cd testing && npm run test",
    "test:unit": "cd testing && npm run test:unit",
    "test:integration": "cd testing && npm run test:integration",
    "test:e2e": "cd testing && npm run test:e2e",
    "test:performance": "cd testing && npm run test:performance",
    "test:stress": "cd testing && npm run test:stress",
    "test:all": "cd testing && npm run test:all",
    "test:ci": "cd testing && npm run test:ci",
    "test:setup": "cd testing && npm run test:setup",
    "test:teardown": "cd testing && npm run test:teardown",
    "test:coverage": "cd testing && npm run test:coverage",
    "db:migrate": "cd shared/database && npm run migrate",
    "db:migrate:test": "cd shared/database && npm run migrate:test",
    "db:seed": "cd shared/database && npm run seed",
    "db:seed:test": "cd shared/database && npm run seed:test",
    "db:reset": "cd shared/database && npm run reset",
    "db:check": "node check-database-connection.js",
    "db:check:simple": "node test-db-simple.js",
    "db:migrate:simple": "node simple-migrate.js",
    "db:seed:simple": "node simple-seed.js",
    "db:status": "node check-db-status.js",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:build": "docker-compose build",
    "docker:logs": "docker-compose logs -f",
    "docker:test": "docker-compose -f testing/docker-compose.test.yml up --build --abort-on-container-exit",
    "lint": "concurrently \"npm run lint:services\" \"npm run lint:web\" \"npm run lint:testing\"",
    "lint:services": "cd services && npm run lint",
    "lint:web": "cd web-app && npm run lint",
    "lint:testing": "cd testing && npm run lint",
    "lint:fix": "concurrently \"npm run lint:fix:services\" \"npm run lint:fix:web\" \"npm run lint:fix:testing\"",
    "lint:fix:services": "cd services && npm run lint:fix",
    "lint:fix:web": "cd web-app && npm run lint:fix",
    "lint:fix:testing": "cd testing && npm run lint:fix",
    "install:all": "npm install && npm run install:services && npm run install:web && npm run install:testing",
    "install:services": "concurrently \"cd services/auth-service && npm install\" \"cd services/workflow-service && npm install\" \"cd services/case-service && npm install\" \"cd services/document-service && npm install\"",
    "install:web": "cd web-app && npm install",
    "install:testing": "cd testing && npm install",
    "clean": "npm run clean:services && npm run clean:web && npm run clean:testing",
    "clean:services": "concurrently \"cd services/auth-service && rm -rf dist node_modules\" \"cd services/workflow-service && rm -rf dist node_modules\" \"cd services/case-service && rm -rf dist node_modules\" \"cd services/document-service && rm -rf dist node_modules\"",
    "clean:web": "cd web-app && rm -rf build node_modules",
    "clean:testing": "cd testing && rm -rf reports node_modules",
    "start": "docker-compose up",
    "start:prod": "docker-compose -f docker-compose.prod.yml up",
    "deploy": "npm run build && npm run docker:build && npm run start:prod"
  },
  "devDependencies": {
    "concurrently": "^8.2.2"
  },
  "workspaces": [
    "services/*",
    "shared/*",
    "web-app",
    "testing"
  ],
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/company/device-repair-management-system.git"
  },
  "keywords": [
    "repair-management",
    "workflow-engine",
    "device-management",
    "microservices",
    "typescript",
    "react",
    "postgresql"
  ],
  "author": "Development Team",
  "license": "MIT"
}